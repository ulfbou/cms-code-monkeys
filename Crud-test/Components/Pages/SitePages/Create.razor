@page "/sites/create"

@using Microsoft.EntityFrameworkCore
@using CodeMonkeys.CMS.Public.Shared.Entities
@inject IDbContextFactory<Crud_test.Data.Crud_testContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Site</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Site" OnValidSubmit="AddSite" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="Site.Name" class="form-control" /> 
                <ValidationMessage For="() => Site.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="createddate" class="form-label">CreatedDate:</label> 
                <InputDate id="createddate" @bind-Value="Site.CreatedDate" class="form-control" /> 
                <ValidationMessage For="() => Site.CreatedDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="lastmodifieddate" class="form-label">LastModifiedDate:</label> 
                <InputDate id="lastmodifieddate" @bind-Value="Site.LastModifiedDate" class="form-control" /> 
                <ValidationMessage For="() => Site.LastModifiedDate" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/sites">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Site Site { get; set; } = new()
    {
        CreatedDate = DateTime.Now,
        LastModifiedDate = DateTime.Now,
        Name = "Nameless Site"
    }; 

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddSite()
    {
        using var context = DbFactory.CreateDbContext();
        context.Site.Add(Site);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/sites");
    }
}
